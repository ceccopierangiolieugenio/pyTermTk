name: _Scratchpad

on:
  workflow_dispatch:
  # push:
  #   branches:
  #     - main

permissions:
  contents: write
  pull-requests: write
  actions: read
  pages: write
  id-token: write

env:
  MY_ARRAY: '[
        { "name": "pyTermTk"      , "path": "libs/pyTermTk"},
        { "name": "dumbPaintTool" , "path": "apps/dumbPaintTool"},
        { "name": "ttkDesigner"   , "path": "apps/ttkDesigner"},
        { "name": "ttkode"        , "path": "apps/ttkode"},
        { "name": "tlogg"         , "path": "apps/tlogg"}
      ]'

jobs:
  test:
    # runs-on: ubuntu-latest
    runs-on: self-hosted

    steps:
      - run: echo Scratchpad
        env:
          GH: ${{ toJson(github) }}
          GHE: ${{ toJson(github.event) }}
          GHEH: ${{ toJson(github.event.head_commit) }}
          GHEHM: ${{ toJson(github.event.head_commit.modified) }}
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.sha }}
      - name: Use the array
        shell: bash
        run: |
          _get_name(){
            _ITEM=$1
            jq -r ".packages[\"${_ITEM}\"][\"package-name\"]" .release-please-config.json
          }
          _get_version(){
            _ITEM=$1
            jq -r ".[\"${_ITEM}\"]" .release-please-manifest.json
          }

          # Parse the JSON string into a Bash array
          my_bash_array=($(jq -r '.[].name' <<< ${MY_ARRAY}))
          # Loop through the array
          for item in "${my_bash_array[@]}"; do
            # Update version in the project
            _VERSION=$(_get_name ${item})
            _NAME=$(_get_version ${item})
            echo "Version ${_NAME}: ${_VERSION}"
          done

  generate-matrix:
    runs-on: self-hosted
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Convert global MY_ARRAY to matrix
        id: set-matrix
        run: |
          echo "MY_ARRAY=${MY_ARRAY}"
          MATRIX=$(jq -c '[.[] | {app: .name, name: .name, path: .path}]' <<< ${MY_ARRAY )
          echo "matrix=$MATRIX"
          echo "matrix=$MATRIX" >> $GITHUB_OUTPUT

  build:
    needs: generate-matrix
    runs-on: self-hosted
    strategy:
      matrix:
        include: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    steps:
      - name: Build ${{ matrix.name }}
        run: |
          echo "Building app at path: ${{ matrix.path }}"

  pippo:
    needs: generate-matrix
    runs-on: self-hosted
    strategy:
      matrix:
        include: ${{ fromJson(needs.generate-matrix.outputs.matrix) }}
    steps:
      - name: Build ${{ matrix.app }}
        run: |
          echo "Building app at path: ${{ matrix.app }}"
